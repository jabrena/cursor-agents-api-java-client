openapi: 3.0.3
info:
  title: Cursor Background Agents API
  description: Programmatically create and manage AI-powered coding agents that work autonomously on your repositories
  version: 0.1.0
  contact:
    email: background-agent-feedback@cursor.com

servers:
  - url: https://api.cursor.com
    description: Production server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: API key from Cursor Dashboard

  schemas:
    ImageDimension:
      type: object
      required:
        - width
        - height
      properties:
        width:
          type: integer
          minimum: 1
          description: Width must be a positive integer
        height:
          type: integer
          minimum: 1
          description: Height must be a positive integer

    Image:
      type: object
      required:
        - data
      properties:
        data:
          type: string
          minLength: 1
          description: Base64 encoded image data
          example: "iVBORw0KGgoAAAANSUhEUgAA..."
        dimension:
          $ref: '#/components/schemas/ImageDimension'

    CreateAgentRequest:
      type: object
      required:
        - prompt
        - source
      properties:
        prompt:
          type: object
          required:
            - text
          properties:
            text:
              type: string
              minLength: 1
              description: The task or instructions for the agent to execute
              example: "Add a README.md file with installation instructions"
            images:
              type: array
              maxItems: 5
              items:
                $ref: '#/components/schemas/Image'
              description: Optional array of base64 encoded images (max 5)
              example: [{"data": "iVBORw0KGgoAAAANSUhEUgAA...", "dimension": {"width": 1024, "height": 768}}]
        model:
          type: string
          minLength: 1
          description: The LLM to use
          example: "claude-4-sonnet"
        source:
          type: object
          required:
            - repository
          properties:
            repository:
              type: string
              minLength: 1
              description: The GitHub repository URL
              example: "https://github.com/your-org/your-repo"
            ref:
              type: string
              minLength: 1
              description: Git ref (branch/tag) to use as the base branch
              example: "main"
        target:
          type: object
          properties:
            autoCreatePr:
              type: boolean
              description: Whether to automatically create a pull request when the agent completes
              default: false
            branchName:
              type: string
              minLength: 1
              description: Custom branch name for the agent to create
              example: "feature/add-readme"
        webhook:
          type: object
          required:
            - url
          properties:
            url:
              type: string
              format: uri
              maxLength: 2048
              description: URL to receive webhook notifications about agent status changes
              example: "https://example.com/webhooks/cursor-agent"
            secret:
              type: string
              minLength: 32
              maxLength: 256
              description: Secret key for webhook payload verification
              example: "your-webhook-secret-key-minimum-32-characters"

    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
              description: Human-readable error message
            code:
              type: string
              description: Machine-readable error code

paths:
  /v0/agents:
    post:
      summary: Launch an agent
      description: Start a new background agent to work on your repository
      operationId: createAgent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAgentRequest'
      responses:
        '201':
          description: Agent created successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - status
                  - source
                  - target
                  - createdAt
                properties:
                  id:
                    type: string
                    description: Unique identifier for the background agent
                    example: "bc_abc123"
                  name:
                    type: string
                    description: Name for the agent
                    example: "Add README Documentation"
                  status:
                    type: string
                    enum: ["CREATING"]
                    description: Initial status of the newly created agent
                    example: "CREATING"
                  source:
                    type: object
                    required:
                      - repository
                    properties:
                      repository:
                        type: string
                        description: The GitHub repository URL
                        example: "https://github.com/your-org/your-repo"
                      ref:
                        type: string
                        description: Git ref (branch/tag) used as the base branch
                        example: "main"
                  target:
                    type: object
                    required:
                      - url
                    properties:
                      branchName:
                        type: string
                        description: The Git branch name where the agent is working
                        example: "cursor/add-readme-1234"
                      url:
                        type: string
                        description: URL to view the agent in Cursor Web
                        example: "https://cursor.com/agents?id=bc_abc123"
                      autoCreatePr:
                        type: boolean
                        description: Whether a pull request will be automatically created
                        example: false
                  createdAt:
                    type: string
                    format: date-time
                    description: When the agent was created
                    example: "2024-01-15T10:30:00Z"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - insufficient permissions, plan limits exceeded, or storage full
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: List agents
      description: List all background agents for the authenticated user
      operationId: listAgents
      parameters:
        - name: limit
          in: query
          required: false
          description: Number of background agents to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: cursor
          in: query
          required: false
          description: Pagination cursor from the previous response
          schema:
            type: string
            minLength: 1
            example: "bc_xyz789"
      responses:
        '200':
          description: Agents retrieved successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - agents
                properties:
                  agents:
                    type: array
                    description: List of agents
                    items:
                      type: object
                      required:
                        - id
                        - name
                        - status
                        - source
                        - target
                        - createdAt
                      properties:
                        id:
                          type: string
                          description: Unique identifier for the background agent
                          example: "bc_abc123"
                        name:
                          type: string
                          description: Name for the agent
                          example: "Add README Documentation"
                        status:
                          type: string
                          enum: ["RUNNING", "FINISHED", "ERROR", "CREATING", "EXPIRED"]
                          description: Current status of the background agent
                          example: "RUNNING"
                        source:
                          type: object
                          properties:
                            repository:
                              type: string
                              description: The GitHub repository URL
                              example: "https://github.com/your-org/your-repo"
                            ref:
                              type: string
                              description: Git ref (branch/tag) used as the base branch
                              example: "main"
                        target:
                          type: object
                          required:
                            - url
                          properties:
                            branchName:
                              type: string
                              description: The Git branch name where the agent is working
                              example: "cursor/add-readme-1234"
                            url:
                              type: string
                              description: URL to view the agent in Cursor Web
                              example: "https://cursor.com/agents?id=bc_abc123"
                            prUrl:
                              type: string
                              description: URL to view the pull request in GitHub, if any
                              example: "https://github.com/your-org/your-repo/pull/1234"
                            autoCreatePr:
                              type: boolean
                              description: Whether a pull request will be automatically created
                              example: false
                        summary:
                          type: string
                          description: Summary of the agent's work
                          example: "Added README.md with installation instructions and usage examples"
                        createdAt:
                          type: string
                          format: date-time
                          description: When the agent was created
                          example: "2024-01-15T10:30:00Z"
                  nextCursor:
                    type: string
                    description: Cursor for fetching the next page of results
                    example: "bc_def456"
        '400':
          description: Invalid request - bad query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/agents/{id}:
    get:
      summary: Agent status
      description: Retrieve the current status and results of a background agent
      operationId: getAgent
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier for the background agent
          schema:
            type: string
            example: "bc_abc123"
      responses:
        '200':
          description: Agent details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - status
                  - source
                  - target
                  - createdAt
                properties:
                  id:
                    type: string
                    description: Unique identifier for the background agent
                    example: "bc_abc123"
                  name:
                    type: string
                    description: Name for the agent
                    example: "Add README Documentation"
                  status:
                    type: string
                    enum: ["RUNNING", "FINISHED", "ERROR", "CREATING", "EXPIRED"]
                    description: Current status of the background agent
                    example: "RUNNING"
                  source:
                    type: object
                    properties:
                      repository:
                        type: string
                        description: The GitHub repository URL
                        example: "https://github.com/your-org/your-repo"
                      ref:
                        type: string
                        description: Git ref (branch/tag) used as the base branch
                        example: "main"
                  target:
                    type: object
                    required:
                      - url
                    properties:
                      branchName:
                        type: string
                        description: The Git branch name where the agent is working
                        example: "cursor/add-readme-1234"
                      url:
                        type: string
                        description: URL to view the agent in Cursor Web
                        example: "https://cursor.com/agents?id=bc_abc123"
                      prUrl:
                        type: string
                        description: URL to view the pull request in GitHub, if any
                        example: "https://github.com/your-org/your-repo/pull/1234"
                      autoCreatePr:
                        type: boolean
                        description: Whether a pull request will be automatically created
                        example: false
                  summary:
                    type: string
                    description: Summary of the agent's work
                    example: "Added README.md with installation instructions and usage examples"
                  createdAt:
                    type: string
                    format: date-time
                    description: When the agent was created
                    example: "2024-01-15T10:30:00Z"
        '400':
          description: Invalid request - bad agent ID format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Agent not found or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete an agent
      description: Delete a background agent. This action is permanent and cannot be undone.
      operationId: deleteAgent
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier for the background agent
          schema:
            type: string
            example: "bc_abc123"
      responses:
        '200':
          description: Agent deleted successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: string
                    description: Unique identifier for the background agent
                    example: "bc_abc123"
        '400':
          description: Invalid request - bad agent ID format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Agent not found or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict - agent is deleted or archived
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/agents/{id}/followup:
    post:
      summary: Add followup
      description: Add a followup instruction to an existing background agent
      operationId: addFollowup
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier for the background agent
          schema:
            type: string
            example: "bc_abc123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - prompt
              properties:
                prompt:
                  type: object
                  required:
                    - text
                  properties:
                    text:
                      type: string
                      minLength: 1
                      description: The followup instruction for the agent
                      example: "Also add a section about troubleshooting"
                    images:
                      type: array
                      maxItems: 5
                      items:
                        $ref: '#/components/schemas/Image'
                      description: Optional array of base64 encoded images (max 5)
                      example: [{"data": "iVBORw0KGgoAAAANSUhEUgAA...", "dimension": {"width": 1024, "height": 768}}]
      responses:
        '200':
          description: Followup added successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: string
                    description: Unique identifier for the background agent
                    example: "bc_abc123"
        '400':
          description: Invalid request - bad agent ID format or invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Agent not found or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict - agent is deleted or archived
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/agents/{id}/conversation:
    get:
      summary: Get agent conversation
      description: Retrieve the conversation history of a background agent, including all user prompts and assistant responses
      operationId: getAgentConversation
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier for the background agent
          schema:
            type: string
            example: "bc_abc123"
      responses:
        '200':
          description: Conversation retrieved successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - messages
                properties:
                  id:
                    type: string
                    description: Unique identifier for the background agent
                    example: "bc_abc123"
                  messages:
                    type: array
                    description: Array of conversation messages ordered chronologically
                    items:
                      type: object
                      required:
                        - id
                        - type
                        - text
                      properties:
                        id:
                          type: string
                          description: Unique identifier for the message
                          example: "msg_123"
                        type:
                          type: string
                          enum: ["user_message", "assistant_message"]
                          description: Type of message - either from the user or the model
                          example: "user_message"
                        text:
                          type: string
                          description: The content of the message
                          example: "Add a README.md file with installation instructions"
        '400':
          description: Invalid request - bad agent ID format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Agent not found or access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict - agent is deleted or archived
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v0/me:
    get:
      summary: API key info
      description: Retrieve information about the API key being used for authentication
      operationId: getMe
      responses:
        '200':
          description: API key information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - apiKeyName
                  - createdAt
                properties:
                  apiKeyName:
                    type: string
                    description: The name of the API key
                    example: "Production API Key"
                  createdAt:
                    type: string
                    format: date-time
                    description: When the API key was created
                    example: "2024-01-15T10:30:00Z"
                  userEmail:
                    type: string
                    format: email
                    description: Email address of the user who owns the API key (if available)
                    example: "developer@example.com"
        '401':
          description: Unauthorized - invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: API key not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v0/models:
    get:
      summary: List available models
      description: Retrieve a list of recommended models for background agents
      operationId: listModels
      responses:
        '200':
          description: Models retrieved successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - models
                properties:
                  models:
                    type: array
                    description: Array of available model names
                    items:
                      type: string
                      minLength: 1
                    example: ["claude-4-sonnet-thinking", "o3", "claude-4-opus-thinking"]
        '401':
          description: Unauthorized - invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v0/repositories:
    get:
      summary: List GitHub repositories
      description: Retrieve a list of GitHub repositories accessible to the authenticated user
      operationId: listRepositories
      responses:
        '200':
          description: Repositories retrieved successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - repositories
                properties:
                  repositories:
                    type: array
                    description: Array of GitHub repositories the user has access to
                    items:
                      type: object
                      required:
                        - owner
                        - name
                        - repository
                      properties:
                        owner:
                          type: string
                          description: The owner of the repository (user or organization)
                          example: "your-org"
                        name:
                          type: string
                          description: The name of the repository
                          example: "your-repo"
                        repository:
                          type: string
                          format: uri
                          description: The full URL to the GitHub repository
                          example: "https://github.com/your-org/your-repo"
        '401':
          description: Unauthorized - invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
