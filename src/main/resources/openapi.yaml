openapi: 3.0.3
info:
  title: Cursor API
  description: API for managing cursors and their operations
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: http://localhost:8080/api/v1
    description: Development server
  - url: https://api.example.com/v1
    description: Production server

paths:
  /cursors:
    get:
      summary: List all cursors
      description: Retrieve a list of all available cursors
      operationId: listCursors
      tags:
        - cursors
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorListResponse'
              examples:
                success:
                  summary: Successful cursor list
                  value:
                    cursors:
                      - id: "cursor-001"
                        name: "Default Cursor"
                        type: "pointer"
                        position:
                          x: 100
                          y: 200
                        active: true
                        createdAt: "2024-01-15T10:30:00Z"
                        updatedAt: "2024-01-15T10:30:00Z"
                      - id: "cursor-002"
                        name: "Text Cursor"
                        type: "text"
                        position:
                          x: 250
                          y: 150
                        active: false
                        createdAt: "2024-01-15T09:15:00Z"
                        updatedAt: "2024-01-15T11:45:00Z"
                    pagination:
                      page: 1
                      limit: 10
                      total: 2
                      totalPages: 1
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_page:
                  summary: Invalid page parameter
                  value:
                    error:
                      code: "INVALID_PARAMETER"
                      message: "Page parameter must be a positive integer"
                      details: "The 'page' query parameter must be greater than 0"

    post:
      summary: Create a new cursor
      description: Create a new cursor with specified properties
      operationId: createCursor
      tags:
        - cursors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCursorRequest'
            examples:
              pointer_cursor:
                summary: Create pointer cursor
                value:
                  name: "Gaming Cursor"
                  type: "pointer"
                  position:
                    x: 300
                    y: 400
                  active: true
              text_cursor:
                summary: Create text cursor
                value:
                  name: "Editor Cursor"
                  type: "text"
                  position:
                    x: 0
                    y: 0
                  active: false
      responses:
        '201':
          description: Cursor created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cursor'
              examples:
                created_cursor:
                  summary: Successfully created cursor
                  value:
                    id: "cursor-003"
                    name: "Gaming Cursor"
                    type: "pointer"
                    position:
                      x: 300
                      y: 400
                    active: true
                    createdAt: "2024-01-15T12:00:00Z"
                    updatedAt: "2024-01-15T12:00:00Z"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                validation_error:
                  summary: Validation error
                  value:
                    error:
                      code: "VALIDATION_ERROR"
                      message: "Invalid cursor data provided"
                      details: "Name field is required and cannot be empty"

  /cursors/{cursorId}:
    get:
      summary: Get cursor by ID
      description: Retrieve a specific cursor by its unique identifier
      operationId: getCursorById
      tags:
        - cursors
      parameters:
        - name: cursorId
          in: path
          required: true
          description: Unique identifier of the cursor
          schema:
            type: string
            pattern: '^cursor-[0-9]+$'
            example: "cursor-001"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cursor'
              examples:
                found_cursor:
                  summary: Cursor found
                  value:
                    id: "cursor-001"
                    name: "Default Cursor"
                    type: "pointer"
                    position:
                      x: 100
                      y: 200
                    active: true
                    createdAt: "2024-01-15T10:30:00Z"
                    updatedAt: "2024-01-15T10:30:00Z"
        '404':
          description: Cursor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                not_found:
                  summary: Cursor not found
                  value:
                    error:
                      code: "CURSOR_NOT_FOUND"
                      message: "Cursor with specified ID not found"
                      details: "No cursor exists with ID 'cursor-999'"

    put:
      summary: Update cursor
      description: Update an existing cursor with new properties
      operationId: updateCursor
      tags:
        - cursors
      parameters:
        - name: cursorId
          in: path
          required: true
          description: Unique identifier of the cursor
          schema:
            type: string
            pattern: '^cursor-[0-9]+$'
            example: "cursor-001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCursorRequest'
            examples:
              update_position:
                summary: Update cursor position
                value:
                  name: "Updated Cursor"
                  position:
                    x: 500
                    y: 600
                  active: false
      responses:
        '200':
          description: Cursor updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cursor'
              examples:
                updated_cursor:
                  summary: Successfully updated cursor
                  value:
                    id: "cursor-001"
                    name: "Updated Cursor"
                    type: "pointer"
                    position:
                      x: 500
                      y: 600
                    active: false
                    createdAt: "2024-01-15T10:30:00Z"
                    updatedAt: "2024-01-15T13:15:00Z"
        '404':
          description: Cursor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete cursor
      description: Delete a cursor by its unique identifier
      operationId: deleteCursor
      tags:
        - cursors
      parameters:
        - name: cursorId
          in: path
          required: true
          description: Unique identifier of the cursor
          schema:
            type: string
            pattern: '^cursor-[0-9]+$'
            example: "cursor-001"
      responses:
        '204':
          description: Cursor deleted successfully
        '404':
          description: Cursor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /cursors/{cursorId}/move:
    post:
      summary: Move cursor
      description: Move a cursor to a new position
      operationId: moveCursor
      tags:
        - cursors
      parameters:
        - name: cursorId
          in: path
          required: true
          description: Unique identifier of the cursor
          schema:
            type: string
            pattern: '^cursor-[0-9]+$'
            example: "cursor-001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveCursorRequest'
            examples:
              move_cursor:
                summary: Move cursor to new position
                value:
                  position:
                    x: 750
                    y: 850
                  animate: true
                  duration: 500
      responses:
        '200':
          description: Cursor moved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cursor'
              examples:
                moved_cursor:
                  summary: Successfully moved cursor
                  value:
                    id: "cursor-001"
                    name: "Default Cursor"
                    type: "pointer"
                    position:
                      x: 750
                      y: 850
                    active: true
                    createdAt: "2024-01-15T10:30:00Z"
                    updatedAt: "2024-01-15T13:30:00Z"
        '404':
          description: Cursor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Cursor:
      type: object
      required:
        - id
        - name
        - type
        - position
        - active
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: Unique identifier for the cursor
          pattern: '^cursor-[0-9]+$'
          example: "cursor-001"
        name:
          type: string
          description: Human-readable name for the cursor
          minLength: 1
          maxLength: 100
          example: "Default Cursor"
        type:
          type: string
          description: Type of cursor
          enum:
            - pointer
            - text
            - crosshair
            - hand
          example: "pointer"
        position:
          $ref: '#/components/schemas/Position'
        active:
          type: boolean
          description: Whether the cursor is currently active
          example: true
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the cursor was created
          example: "2024-01-15T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the cursor was last updated
          example: "2024-01-15T10:30:00Z"

    Position:
      type: object
      required:
        - x
        - y
      properties:
        x:
          type: integer
          description: X coordinate
          minimum: 0
          example: 100
        y:
          type: integer
          description: Y coordinate
          minimum: 0
          example: 200

    CreateCursorRequest:
      type: object
      required:
        - name
        - type
        - position
      properties:
        name:
          type: string
          description: Human-readable name for the cursor
          minLength: 1
          maxLength: 100
          example: "Gaming Cursor"
        type:
          type: string
          description: Type of cursor
          enum:
            - pointer
            - text
            - crosshair
            - hand
          example: "pointer"
        position:
          $ref: '#/components/schemas/Position'
        active:
          type: boolean
          description: Whether the cursor should be active initially
          default: false
          example: true

    UpdateCursorRequest:
      type: object
      properties:
        name:
          type: string
          description: Human-readable name for the cursor
          minLength: 1
          maxLength: 100
          example: "Updated Cursor"
        type:
          type: string
          description: Type of cursor
          enum:
            - pointer
            - text
            - crosshair
            - hand
          example: "pointer"
        position:
          $ref: '#/components/schemas/Position'
        active:
          type: boolean
          description: Whether the cursor is currently active
          example: false

    MoveCursorRequest:
      type: object
      required:
        - position
      properties:
        position:
          $ref: '#/components/schemas/Position'
        animate:
          type: boolean
          description: Whether to animate the cursor movement
          default: false
          example: true
        duration:
          type: integer
          description: Animation duration in milliseconds
          minimum: 0
          maximum: 5000
          default: 300
          example: 500

    CursorListResponse:
      type: object
      required:
        - cursors
        - pagination
      properties:
        cursors:
          type: array
          items:
            $ref: '#/components/schemas/Cursor'
        pagination:
          $ref: '#/components/schemas/Pagination'

    Pagination:
      type: object
      required:
        - page
        - limit
        - total
        - totalPages
      properties:
        page:
          type: integer
          description: Current page number
          minimum: 1
          example: 1
        limit:
          type: integer
          description: Number of items per page
          minimum: 1
          example: 10
        total:
          type: integer
          description: Total number of items
          minimum: 0
          example: 25
        totalPages:
          type: integer
          description: Total number of pages
          minimum: 0
          example: 3

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              description: Error code
              example: "VALIDATION_ERROR"
            message:
              type: string
              description: Human-readable error message
              example: "Invalid cursor data provided"
            details:
              type: string
              description: Additional error details
              example: "Name field is required and cannot be empty"

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

security:
  - ApiKeyAuth: []