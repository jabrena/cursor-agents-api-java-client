openapi: 3.0.3
info:
  title: Cursor Background Agents API
  description: API for managing AI-powered coding agents that work autonomously on your repositories
  version: 1.0.0
  contact:
    name: Cursor API Support
    url: https://docs.cursor.com
    email: support@cursor.com

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: https://api.cursor.com
    description: Production server

paths:
  /v0/agents:
    post:
      summary: Launch an Agent
      description: Start a new background agent to work on your repository
      operationId: launchAgent
      tags:
        - agents
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchAgentRequest'
            examples:
              simple_prompt:
                summary: Simple text prompt
                value:
                  prompt:
                    text: "Add a README.md file with installation instructions"
                  source:
                    repository: "https://github.com/your-org/your-repo"
                    ref: "main"
              with_images:
                summary: Prompt with images
                value:
                  prompt:
                    text: "Add a README.md file with installation instructions"
                    images:
                      - data: "iVBORw0KGgoAAAANSUhEUgAA..."
                        dimension:
                          width: 1024
                          height: 768
                  source:
                    repository: "https://github.com/your-org/your-repo"
                    ref: "main"
      responses:
        '201':
          description: Agent created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
              examples:
                created_agent:
                  summary: Successfully created agent
                  value:
                    id: "bc_abc123"
                    name: "Add README Documentation"
                    status: "CREATING"
                    source:
                      repository: "https://github.com/your-org/your-repo"
                      ref: "main"
                    target:
                      branchName: "cursor/add-readme-1234"
                      url: "https://cursor.com/agents?id=bc_abc123"
                      autoCreatePr: false
                    createdAt: "2024-01-15T10:30:00Z"
        '400':
          description: Bad request - Invalid input parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                validation_error:
                  summary: Validation error
                  value:
                    error:
                      code: "VALIDATION_ERROR"
                      message: "Invalid request data"
                      details: "The prompt text is required and cannot be empty"
        '401':
          description: Unauthorized - Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unauthorized:
                  summary: Unauthorized access
                  value:
                    error:
                      code: "UNAUTHORIZED"
                      message: "Authentication required"
                      details: "Please provide a valid API key in the Authorization header"
        '403':
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                forbidden:
                  summary: Insufficient permissions
                  value:
                    error:
                      code: "FORBIDDEN"
                      message: "Insufficient permissions"
                      details: "You don't have permission to access this repository"
        '429':
          description: Too Many Requests - Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                rate_limit:
                  summary: Rate limit exceeded
                  value:
                    error:
                      code: "RATE_LIMIT_EXCEEDED"
                      message: "Too many requests"
                      details: "You have exceeded the rate limit. Please try again later"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: Internal server error
                  value:
                    error:
                      code: "INTERNAL_ERROR"
                      message: "An unexpected error occurred"
                      details: "Please try again later or contact support if the issue persists"

  /v0/agents/{agentId}/follow-up:
    post:
      summary: Add Follow-up
      description: Add a follow-up message or instruction to an existing agent
      operationId: addFollowUp
      tags:
        - agents
      security:
        - BearerAuth: []
      parameters:
        - name: agentId
          in: path
          required: true
          description: Unique identifier of the agent
          schema:
            type: string
            pattern: '^bc_[a-zA-Z0-9]+$'
            example: "bc_abc123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowUpRequest'
            examples:
              text_followup:
                summary: Text follow-up
                value:
                  prompt:
                    text: "Also add unit tests for the new functionality"
      responses:
        '200':
          description: Follow-up added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Agent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                not_found:
                  summary: Agent not found
                  value:
                    error:
                      code: "AGENT_NOT_FOUND"
                      message: "Agent with specified ID not found"
                      details: "No agent exists with ID 'bc_abc123'"

  /v0/agents/{agentId}:
    delete:
      summary: Delete an Agent
      description: Delete an agent by its unique identifier
      operationId: deleteAgent
      tags:
        - agents
      security:
        - BearerAuth: []
      parameters:
        - name: agentId
          in: path
          required: true
          description: Unique identifier of the agent
          schema:
            type: string
            pattern: '^bc_[a-zA-Z0-9]+$'
            example: "bc_abc123"
      responses:
        '204':
          description: Agent deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Agent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                not_found:
                  summary: Agent not found
                  value:
                    error:
                      code: "AGENT_NOT_FOUND"
                      message: "Agent with specified ID not found"
                      details: "No agent exists with ID 'bc_abc123'"

    get:
      summary: Get Agent Information
      description: Retrieve information about a specific agent by its unique identifier
      operationId: getAgent
      tags:
        - agents
      security:
        - BearerAuth: []
      parameters:
        - name: agentId
          in: path
          required: true
          description: Unique identifier of the agent
          schema:
            type: string
            pattern: '^bc_[a-zA-Z0-9]+$'
            example: "bc_abc123"
      responses:
        '200':
          description: Agent information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
              examples:
                agent_info:
                  summary: Agent information
                  value:
                    id: "bc_abc123"
                    name: "Add README Documentation"
                    status: "COMPLETED"
                    source:
                      repository: "https://github.com/your-org/your-repo"
                      ref: "main"
                    target:
                      branchName: "cursor/add-readme-1234"
                      url: "https://cursor.com/agents?id=bc_abc123"
                      autoCreatePr: false
                    createdAt: "2024-01-15T10:30:00Z"
                    updatedAt: "2024-01-15T11:45:00Z"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Agent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    LaunchAgentRequest:
      type: object
      required:
        - prompt
        - source
      properties:
        prompt:
          $ref: '#/components/schemas/Prompt'
        source:
          $ref: '#/components/schemas/Source'

    FollowUpRequest:
      type: object
      required:
        - prompt
      properties:
        prompt:
          $ref: '#/components/schemas/Prompt'

    Prompt:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: The prompt text for the agent
          minLength: 1
          maxLength: 10000
          example: "Add a README.md file with installation instructions"
        images:
          type: array
          description: Optional array of images to include with the prompt
          items:
            $ref: '#/components/schemas/Image'

    Image:
      type: object
      required:
        - data
        - dimension
      properties:
        data:
          type: string
          format: byte
          description: Base64-encoded image data
          example: "iVBORw0KGgoAAAANSUhEUgAA..."
        dimension:
          $ref: '#/components/schemas/ImageDimension'

    ImageDimension:
      type: object
      required:
        - width
        - height
      properties:
        width:
          type: integer
          description: Width of the image in pixels
          minimum: 1
          maximum: 4096
          example: 1024
        height:
          type: integer
          description: Height of the image in pixels
          minimum: 1
          maximum: 4096
          example: 768

    Source:
      type: object
      required:
        - repository
        - ref
      properties:
        repository:
          type: string
          format: uri
          description: URL of the GitHub repository
          pattern: '^https://github\.com/[a-zA-Z0-9_.-]+/[a-zA-Z0-9_.-]+$'
          example: "https://github.com/your-org/your-repo"
        ref:
          type: string
          description: Branch or commit reference
          minLength: 1
          maxLength: 255
          example: "main"

    Agent:
      type: object
      required:
        - id
        - name
        - status
        - source
        - target
        - createdAt
      properties:
        id:
          type: string
          description: Unique identifier for the agent
          pattern: '^bc_[a-zA-Z0-9]+$'
          example: "bc_abc123"
        name:
          type: string
          description: Human-readable name for the agent
          minLength: 1
          maxLength: 200
          example: "Add README Documentation"
        status:
          type: string
          description: Current status of the agent
          enum:
            - CREATING
            - RUNNING
            - COMPLETED
            - FAILED
            - CANCELLED
          example: "CREATING"
        source:
          $ref: '#/components/schemas/Source'
        target:
          $ref: '#/components/schemas/Target'
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the agent was created
          example: "2024-01-15T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the agent was last updated
          example: "2024-01-15T11:45:00Z"

    Target:
      type: object
      required:
        - branchName
        - url
        - autoCreatePr
      properties:
        branchName:
          type: string
          description: Name of the branch created by the agent
          pattern: '^cursor/[a-zA-Z0-9_.-]+$'
          example: "cursor/add-readme-1234"
        url:
          type: string
          format: uri
          description: URL to access the agent in Cursor
          example: "https://cursor.com/agents?id=bc_abc123"
        autoCreatePr:
          type: boolean
          description: Whether a pull request is automatically created
          default: false
          example: false

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          $ref: '#/components/schemas/Error'

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Error code
          enum:
            - VALIDATION_ERROR
            - UNAUTHORIZED
            - FORBIDDEN
            - AGENT_NOT_FOUND
            - RATE_LIMIT_EXCEEDED
            - INTERNAL_ERROR
          example: "VALIDATION_ERROR"
        message:
          type: string
          description: Human-readable error message
          minLength: 1
          maxLength: 500
          example: "Invalid request data"
        details:
          type: string
          description: Additional error details
          maxLength: 1000
          example: "The prompt text is required and cannot be empty"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "API key from Cursor Dashboard. Include as 'Authorization: Bearer YOUR_API_KEY'"

security:
  - BearerAuth: []
