name: CI Pipeline

on:
  push:
    # Run on all branches

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [17, 21]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Make Maven wrapper executable
      run: chmod +x ./mvnw
    
    - name: Generate OpenAPI client sources
      run: ./mvnw clean generate-sources
    
    - name: Compile project
      run: ./mvnw compile
    
    - name: Run tests
      run: ./mvnw test
    
    - name: Verify project
      run: ./mvnw verify
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-java-${{ matrix.java-version }}
        path: |
          target/surefire-reports/
          target/failsafe-reports/
        retention-days: 30
    
    - name: Upload generated sources
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: generated-sources-java-${{ matrix.java-version }}
        path: target/generated-sources/
        retention-days: 7

  build-info:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Make Maven wrapper executable
      run: chmod +x ./mvnw
    
    - name: Generate project info
      run: |
        echo "## Build Information" >> $GITHUB_STEP_SUMMARY
        echo "- **Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Java Versions Tested:** 17, 21" >> $GITHUB_STEP_SUMMARY
        echo "- **Workflow:** Runs on ALL branches (feature, bugfix, hotfix, main, develop)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Project Structure" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ OpenAPI YAML specification in \`src/main/resources/\`" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Maven plugin generates Java client from OpenAPI" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ WireMock integration tests with payload examples" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Jackson for JSON serialization" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Native HTTP client (Java 11+)" >> $GITHUB_STEP_SUMMARY
    
    - name: List generated API classes
      run: |
        ./mvnw clean generate-sources
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Generated API Classes" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        find target/generated-sources/src/main/java -name "*.java" -type f | head -20 >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY