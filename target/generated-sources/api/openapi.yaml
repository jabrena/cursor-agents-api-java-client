openapi: 3.0.3
info:
  contact:
    email: support@example.com
    name: API Support
  description: API for managing cursors and their operations
  title: Cursor API
  version: 1.0.0
servers:
- description: Development server
  url: http://localhost:8080/api/v1
- description: Production server
  url: https://api.example.com/v1
security:
- ApiKeyAuth: []
paths:
  /cursors:
    get:
      description: Retrieve a list of all available cursors
      operationId: listCursors
      parameters:
      - description: Page number for pagination
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  summary: Successful cursor list
                  value:
                    cursors:
                    - id: cursor-001
                      name: Default Cursor
                      type: pointer
                      position:
                        x: 100
                        "y": 200
                      active: true
                      createdAt: 2024-01-15T10:30:00Z
                      updatedAt: 2024-01-15T10:30:00Z
                    - id: cursor-002
                      name: Text Cursor
                      type: text
                      position:
                        x: 250
                        "y": 150
                      active: false
                      createdAt: 2024-01-15T09:15:00Z
                      updatedAt: 2024-01-15T11:45:00Z
                    pagination:
                      page: 1
                      limit: 10
                      total: 2
                      totalPages: 1
              schema:
                $ref: '#/components/schemas/CursorListResponse'
          description: Successful response
        "400":
          content:
            application/json:
              examples:
                invalid_page:
                  summary: Invalid page parameter
                  value:
                    error:
                      code: INVALID_PARAMETER
                      message: Page parameter must be a positive integer
                      details: The 'page' query parameter must be greater than 0
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
      summary: List all cursors
      tags:
      - cursors
      x-accepts: application/json
    post:
      description: Create a new cursor with specified properties
      operationId: createCursor
      requestBody:
        content:
          application/json:
            examples:
              pointer_cursor:
                summary: Create pointer cursor
                value:
                  name: Gaming Cursor
                  type: pointer
                  position:
                    x: 300
                    "y": 400
                  active: true
              text_cursor:
                summary: Create text cursor
                value:
                  name: Editor Cursor
                  type: text
                  position:
                    x: 0
                    "y": 0
                  active: false
            schema:
              $ref: '#/components/schemas/CreateCursorRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                created_cursor:
                  summary: Successfully created cursor
                  value:
                    id: cursor-003
                    name: Gaming Cursor
                    type: pointer
                    position:
                      x: 300
                      "y": 400
                    active: true
                    createdAt: 2024-01-15T12:00:00Z
                    updatedAt: 2024-01-15T12:00:00Z
              schema:
                $ref: '#/components/schemas/Cursor'
          description: Cursor created successfully
        "400":
          content:
            application/json:
              examples:
                validation_error:
                  summary: Validation error
                  value:
                    error:
                      code: VALIDATION_ERROR
                      message: Invalid cursor data provided
                      details: Name field is required and cannot be empty
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
      summary: Create a new cursor
      tags:
      - cursors
      x-content-type: application/json
      x-accepts: application/json
  /cursors/{cursorId}:
    delete:
      description: Delete a cursor by its unique identifier
      operationId: deleteCursor
      parameters:
      - description: Unique identifier of the cursor
        explode: false
        in: path
        name: cursorId
        required: true
        schema:
          example: cursor-001
          pattern: "^cursor-[0-9]+$"
          type: string
        style: simple
      responses:
        "204":
          description: Cursor deleted successfully
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cursor not found
      summary: Delete cursor
      tags:
      - cursors
      x-accepts: application/json
    get:
      description: Retrieve a specific cursor by its unique identifier
      operationId: getCursorById
      parameters:
      - description: Unique identifier of the cursor
        explode: false
        in: path
        name: cursorId
        required: true
        schema:
          example: cursor-001
          pattern: "^cursor-[0-9]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                found_cursor:
                  summary: Cursor found
                  value:
                    id: cursor-001
                    name: Default Cursor
                    type: pointer
                    position:
                      x: 100
                      "y": 200
                    active: true
                    createdAt: 2024-01-15T10:30:00Z
                    updatedAt: 2024-01-15T10:30:00Z
              schema:
                $ref: '#/components/schemas/Cursor'
          description: Successful response
        "404":
          content:
            application/json:
              examples:
                not_found:
                  summary: Cursor not found
                  value:
                    error:
                      code: CURSOR_NOT_FOUND
                      message: Cursor with specified ID not found
                      details: No cursor exists with ID 'cursor-999'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cursor not found
      summary: Get cursor by ID
      tags:
      - cursors
      x-accepts: application/json
    put:
      description: Update an existing cursor with new properties
      operationId: updateCursor
      parameters:
      - description: Unique identifier of the cursor
        explode: false
        in: path
        name: cursorId
        required: true
        schema:
          example: cursor-001
          pattern: "^cursor-[0-9]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              update_position:
                summary: Update cursor position
                value:
                  name: Updated Cursor
                  position:
                    x: 500
                    "y": 600
                  active: false
            schema:
              $ref: '#/components/schemas/UpdateCursorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                updated_cursor:
                  summary: Successfully updated cursor
                  value:
                    id: cursor-001
                    name: Updated Cursor
                    type: pointer
                    position:
                      x: 500
                      "y": 600
                    active: false
                    createdAt: 2024-01-15T10:30:00Z
                    updatedAt: 2024-01-15T13:15:00Z
              schema:
                $ref: '#/components/schemas/Cursor'
          description: Cursor updated successfully
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cursor not found
      summary: Update cursor
      tags:
      - cursors
      x-content-type: application/json
      x-accepts: application/json
  /cursors/{cursorId}/move:
    post:
      description: Move a cursor to a new position
      operationId: moveCursor
      parameters:
      - description: Unique identifier of the cursor
        explode: false
        in: path
        name: cursorId
        required: true
        schema:
          example: cursor-001
          pattern: "^cursor-[0-9]+$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              move_cursor:
                summary: Move cursor to new position
                value:
                  position:
                    x: 750
                    "y": 850
                  animate: true
                  duration: 500
            schema:
              $ref: '#/components/schemas/MoveCursorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                moved_cursor:
                  summary: Successfully moved cursor
                  value:
                    id: cursor-001
                    name: Default Cursor
                    type: pointer
                    position:
                      x: 750
                      "y": 850
                    active: true
                    createdAt: 2024-01-15T10:30:00Z
                    updatedAt: 2024-01-15T13:30:00Z
              schema:
                $ref: '#/components/schemas/Cursor'
          description: Cursor moved successfully
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Cursor not found
      summary: Move cursor
      tags:
      - cursors
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    Cursor:
      example:
        createdAt: 2024-01-15T10:30:00Z
        name: Default Cursor
        active: true
        id: cursor-001
        position:
          x: 100
          "y": 200
        type: pointer
        updatedAt: 2024-01-15T10:30:00Z
      properties:
        id:
          description: Unique identifier for the cursor
          example: cursor-001
          pattern: "^cursor-[0-9]+$"
          type: string
        name:
          description: Human-readable name for the cursor
          example: Default Cursor
          maxLength: 100
          minLength: 1
          type: string
        type:
          description: Type of cursor
          enum:
          - pointer
          - text
          - crosshair
          - hand
          example: pointer
          type: string
        position:
          $ref: '#/components/schemas/Position'
        active:
          description: Whether the cursor is currently active
          example: true
          type: boolean
        createdAt:
          description: Timestamp when the cursor was created
          example: 2024-01-15T10:30:00Z
          format: date-time
          type: string
        updatedAt:
          description: Timestamp when the cursor was last updated
          example: 2024-01-15T10:30:00Z
          format: date-time
          type: string
      required:
      - active
      - createdAt
      - id
      - name
      - position
      - type
      - updatedAt
      type: object
    Position:
      example:
        x: 100
        "y": 200
      properties:
        x:
          description: X coordinate
          example: 100
          minimum: 0
          type: integer
        "y":
          description: Y coordinate
          example: 200
          minimum: 0
          type: integer
      required:
      - x
      - "y"
      type: object
    CreateCursorRequest:
      example:
        name: Gaming Cursor
        active: true
        position:
          x: 100
          "y": 200
        type: pointer
      properties:
        name:
          description: Human-readable name for the cursor
          example: Gaming Cursor
          maxLength: 100
          minLength: 1
          type: string
        type:
          description: Type of cursor
          enum:
          - pointer
          - text
          - crosshair
          - hand
          example: pointer
          type: string
        position:
          $ref: '#/components/schemas/Position'
        active:
          default: false
          description: Whether the cursor should be active initially
          example: true
          type: boolean
      required:
      - name
      - position
      - type
      type: object
    UpdateCursorRequest:
      example:
        name: Updated Cursor
        active: false
        position:
          x: 100
          "y": 200
        type: pointer
      properties:
        name:
          description: Human-readable name for the cursor
          example: Updated Cursor
          maxLength: 100
          minLength: 1
          type: string
        type:
          description: Type of cursor
          enum:
          - pointer
          - text
          - crosshair
          - hand
          example: pointer
          type: string
        position:
          $ref: '#/components/schemas/Position'
        active:
          description: Whether the cursor is currently active
          example: false
          type: boolean
      type: object
    MoveCursorRequest:
      example:
        duration: 500
        position:
          x: 100
          "y": 200
        animate: true
      properties:
        position:
          $ref: '#/components/schemas/Position'
        animate:
          default: false
          description: Whether to animate the cursor movement
          example: true
          type: boolean
        duration:
          default: 300
          description: Animation duration in milliseconds
          example: 500
          maximum: 5000
          minimum: 0
          type: integer
      required:
      - position
      type: object
    CursorListResponse:
      example:
        cursors:
        - createdAt: 2024-01-15T10:30:00Z
          name: Default Cursor
          active: true
          id: cursor-001
          position:
            x: 100
            "y": 200
          type: pointer
          updatedAt: 2024-01-15T10:30:00Z
        - createdAt: 2024-01-15T10:30:00Z
          name: Default Cursor
          active: true
          id: cursor-001
          position:
            x: 100
            "y": 200
          type: pointer
          updatedAt: 2024-01-15T10:30:00Z
        pagination:
          total: 25
          limit: 10
          totalPages: 3
          page: 1
      properties:
        cursors:
          items:
            $ref: '#/components/schemas/Cursor'
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - cursors
      - pagination
      type: object
    Pagination:
      example:
        total: 25
        limit: 10
        totalPages: 3
        page: 1
      properties:
        page:
          description: Current page number
          example: 1
          minimum: 1
          type: integer
        limit:
          description: Number of items per page
          example: 10
          minimum: 1
          type: integer
        total:
          description: Total number of items
          example: 25
          minimum: 0
          type: integer
        totalPages:
          description: Total number of pages
          example: 3
          minimum: 0
          type: integer
      required:
      - limit
      - page
      - total
      - totalPages
      type: object
    ErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse_error'
      required:
      - error
      type: object
    ErrorResponse_error:
      properties:
        code:
          description: Error code
          example: VALIDATION_ERROR
          type: string
        message:
          description: Human-readable error message
          example: Invalid cursor data provided
          type: string
        details:
          description: Additional error details
          example: Name field is required and cannot be empty
          type: string
      required:
      - code
      - message
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey

